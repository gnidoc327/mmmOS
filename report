0)
working environment : ubuntu 14.04 LTS
assignment
- kim han sung
	implement sync.c and sync.h

- kim seong won
	implement test code for mutex and write report

1)
mutex를 구현하였습니다. 처음 초기화는 lock의 여부를 알려주는 count(=key)를 0으로 현재 사용 중인 것은 NULL로 선언하였습니다. 그리고 lock의 경우, count값을 올려 사용 중임을 나타내었고 다른 스레드가 접근할 경우 현재 작업 중인 스레드가 있는경우 접근한 스레드를 중지하고 queue에 담아서 순차적으로 일을 하도록 구현하였습니다. trylock의 경우 lock의 여부를 확인하여 lock이 안되어있다면 시도한 스레드가 작업되도록 하였습니다. unlock은 count를 감소시켜 lock을 해제하고 대기 중인 스레드를 넣고 wake시켜 다시 작업되도록 구현하였습니다. destroy의 경우 끝남을 알리기때문에 return 0만 하였습니다.

2)
실행결과 스크린샷

3) what is the synchronization in the threads?
스레드 동기화란 두개 이상의 스레드가 공유 데이터를 접근하는 경우 일정한 간격을 두고 접근할 수 있도록 조정하는 것입니다. mutex를 사용하여 스레드 동기화를 하는 경우, 임의의 스레드를 먼저 작업시키고 mutex에 lock을 걸어 접근하지 못하게 한 뒤에 접근하는 나머지 스레드는 suspend시킵니다. 먼저 작업하던 스레드가 종료되면 해당 스레드를 detroy하고 lock을 해제한 후에 새로운 스레드를 작업시킵니다. 마찬가지고 다시 lock을 걸고 이러한 작업을 모든 스레드가 종료할때까지 반복합니다. 저희가 구현한 것에서는 queue를 사용하여 suspend된 스레드들을 저장해놨습니다. 우선 순위를 고려하지 않았지만 가장 안전한 방법이기 때문에 queue를 사용하였습니다.
